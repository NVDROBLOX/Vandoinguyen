repeat
    local ChooseTeam = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("ChooseTeam", true)
    local UIController = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("UIController", true)
    if UIController and ChooseTeam then
        if ChooseTeam.Visible then
            for i, v in pairs(getgc()) do
                if type(v) == "function" and getfenv(v).script == UIController then
                    local constant = getconstants(v)
                    pcall(function()
                        if (constant[1] == "Pirates" or constant[1] == "Marines") and #constant == 1 then
                            local teamToSelect = getgenv().Team or "Pirates"
                            if constant[1] == teamToSelect then
                                v(teamToSelect)
                            end
                        end
                    end)
                end
            end
        end
    end
    wait(1)
until game.Players.LocalPlayer.Team

repeat
    wait()
until game.Players.LocalPlayer.Character

    function Hop() 
        local PlaceID = game.PlaceId 
        local AllIDs = {} 
        local foundAnything = "" 
        local actualHour = os.date("!*t").hour 
        local Deleted = false 
        function TPReturner() 
            local Site; 
            if foundAnything == "" then 
                Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100')) 
            else 
                Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything)) 
            end 
            local ID = "" 
            if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then 
                foundAnything = Site.nextPageCursor 
            end 
            local num = 0; 
            for i,v in pairs(Site.data) do 
                local Possible = true 
                ID = tostring(v.id) 
                if tonumber(v.maxPlayers) > tonumber(v.playing) then 
                    for _,Existing in pairs(AllIDs) do 
                        if num ~= 0 then 
                            if ID == tostring(Existing) then 
                                Possible = false 
                            end 
                        else 
                            if tonumber(actualHour) ~= tonumber(Existing) then 
                                local delFile = pcall(function() 
                                    AllIDs = {} 
                                    table.insert(AllIDs, actualHour) 
                                end) 
                            end 
                        end 
                        num = num + 1 
                    end 
                    if Possible == true then 
                        table.insert(AllIDs, ID) 
                        wait() 
                        pcall(function() 
                            wait() 
                            game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer) 
                        end) 
                        wait(4) 
                    end 
                end 
            end 
        end 
        function Teleport()  
            while wait() do 
                pcall(function() 
                    TPReturner() 
                    if foundAnything ~= "" then 
                        TPReturner() 
                    end 
                end) 
            end 
        end 
        Teleport() 
    end       

_G.ChestBypass = true

spawn(function() 
while wait() do 
if _G.ChestBypass then 
pcall(function() 
for i,v in pairs(game:GetService("Workspace"):GetChildren()) do 
      if string.find(v.Name, "Chest") then 
          print(v.Name) 
          game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
          wait(.15) 
      end 
  end 
  game.Players.LocalPlayer.Character.Head:Destroy()